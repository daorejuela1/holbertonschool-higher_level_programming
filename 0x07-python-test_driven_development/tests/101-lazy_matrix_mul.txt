The ``101-lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

This is the test file for the 101-lazy_matrix_mul function
``lazy_matrix_mul`` from the ``101-lazy_matrix_mul`` module:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test with empty matrix:

    >>> lazy_matrix_mul([[]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_a is empty

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[5, 5]], [[2, 2], [3, 2]])
    array([[25, 20]])

    >>> lazy_matrix_mul([[1, 4, 6]], [[2, 5, 7], [3, 8, 9]])
    Traceback (most recent call last):
    ...
    ValueError: m_a colums are not m_b rows

    >>> lazy_matrix_mul([[14, 44, 64]], [[24, 34], [45, 48], [70, 9]])
    array([[6796, 3164]])

    >>> lazy_matrix_mul([[21, 22]], [[32, 42], [52, 26]])
    array([[1816, 1454]])

m_a is not a list

    >>> lazy_matrix_mul('a', [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a is not a list

    >>> lazy_matrix_mul(1, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a is not a list

m_b is not a list


    >>> lazy_matrix_mul([[1, 2], [3, 4]], 5)
    Traceback (most recent call last):
    ...
    TypeError: m_b is not a list

    >>> lazy_matrix_mul([[1, 2], [3, 4]], "hola")
    Traceback (most recent call last):
    ...
    TypeError: m_b is not a list

m_a is not a list of list.

    >>> lazy_matrix_mul([2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a is not a list of lists

    >>> lazy_matrix_mul(["happy"], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a is not a list of lists

m_b is not a list of list.

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [2])
    Traceback (most recent call last):
    ...
    TypeError: m_b is not a list of lists

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [(2, 3)])
    Traceback (most recent call last):
    ...
    TypeError: m_b is not a list of lists

empty m_a

    >>> lazy_matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a is empty

    >>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a is empty

empty m_b

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b is empty

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b is empty

test with no num:

    >>> lazy_matrix_mul([['a', 2]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a contains a not number

    >>> lazy_matrix_mul([[4, 2]], [[3, 4], [5, "hola"]])
    Traceback (most recent call last):
    ...
    ValueError: m_b contains a not number

    >>> lazy_matrix_mul([['a', 2]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a contains a not number

different rows m_a

    >>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a rows are not even

    >>> lazy_matrix_mul([[1, 2], [3, 3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a rows are not even

different rows m_b

    >>> lazy_matrix_mul([[1, 2], [3, 5]], [[1, 2, 5], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_b rows are not even

    >>> lazy_matrix_mul([[1, 2], [3, 5]], [[1, 2, 5], [3, 4, 8, 6]])
    Traceback (most recent call last):
    ...
    TypeError: m_b rows are not even

can't be multiplied

    >>> lazy_matrix_mul([[1,3]], [[1, 2, 5, 9, 10], [3, 4, 6, 7, 8], [3, 4, 6, 7, 8]])
    Traceback (most recent call last):
    ...
    ValueError: m_a colums are not m_b rows

    >>> lazy_matrix_mul([[1, 2, 5, 9, 10], [3, 4, 6, 7, 8], [3, 4, 6, 7, 8]], [[1,3]])
    Traceback (most recent call last):
    ...
    ValueError: m_a colums are not m_b rows
