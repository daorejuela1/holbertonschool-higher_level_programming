
The '1-my_list' module
======================

Using `MyList`
-------------------

test for a class that creates a new object based on a list:

    >>> MyList = __import__('1-my_list').MyList

Testing null list:

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Testing 1 append list:

    >>> my_list = MyList()
    >>> my_list.append(-9)
    >>> my_list.print_sorted()
    [-9]


Testing append text list:

    >>> my_list = MyList()
    >>> my_list.append("float['inf']")
    >>> my_list.print_sorted()
    ["float['inf']"]

Testing append text list:

    >>> my_list = MyList()
    >>> my_list.append("float['inf']")
    >>> my_list.print_sorted()
    ["float['inf']"]

Testing all sort:

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [5, 5, 5, 5, 5]

    >>> my_list = MyList()
    >>> my_list.append(25)
    >>> my_list.append(15)
    >>> my_list.append(35)
    >>> my_list.append(45)
    >>> my_list.append(55)
    >>> my_list.print_sorted()
    [15, 25, 35, 45, 55]

    >>> my_list = MyList()
    >>> my_list.append(float('inf'))
    >>> my_list.print_sorted()
    [inf]

    >>> my_list = MyList()
    >>> my_list.append(float('nan'))
    >>> my_list.print_sorted()
    [nan]